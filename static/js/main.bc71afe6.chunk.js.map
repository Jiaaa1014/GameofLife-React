{"version":3,"sources":["Box.js","Grid.js","Buttons.js","Main.js","index.js"],"names":["Box","className","this","props","boxClass","id","role","onClick","selectBox","row","col","PureComponent","Grid","i","j","width","cols","rowsArr","rows","boxID","gridFull","push","key","style","Buttons","handleSelect","e","gridSize","ButtonToolbar","ButtonGroup","bsSize","Button","playButton","pauseButton","fast","slow","clear","seed","DropdownButton","title","onSelect","Dropdown","Item","eventKey","Component","arrayClone","arr","JSON","parse","stringify","Main","state","setState","speed","clearInterval","intervalID","setInterval","play","Array","fill","map","generation","Math","floor","random","size","g","g2","count","console","log","process","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.bc71afe6.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Box extends PureComponent {\n  static propTypes = {\n    row: PropTypes.number.isRequired,\n    col: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    selectBox: PropTypes.func.isRequired,\n    boxClass: PropTypes.string.isRequired\n  }\n  render() {\n    return (\n      <td\n        className={this.props.boxClass}\n        id={this.props.id}\n        role=\"presentation\"\n        onClick={\n          () => this.props.selectBox(this.props.row, this.props.col)\n        }\n      />\n    )\n  }\n}\n\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Box from './Box'\n\nexport default class Grid extends PureComponent {\n  static propTypes = {\n    gridFull: PropTypes.array.isRequired,\n    rows: PropTypes.number.isRequired,\n    cols: PropTypes.number.isRequired,\n    selectBox: PropTypes.func.isRequired\n  }\n  render() {\n    const width = this.props.cols * 14\n    const rowsArr = []\n    let boxClass = ''\n    let i\n    let j\n    for (i = 0; i < this.props.rows; i += 1) {\n      for (j = 0; j < this.props.cols; j += 1) {\n        const boxID = `${i}-${j}`\n        boxClass = this.props.gridFull[i][j] ? 'box on' : 'box off'\n        rowsArr.push(<Box\n          boxClass={boxClass}\n          key={boxID}\n          id={boxID}\n          row={i}\n          col={j}\n          selectBox={this.props.selectBox}\n        />)\n      }\n    }\n    return (\n      <tr className=\"grid\" style={{ width }}>\n        {rowsArr}\n      </tr>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {\n  Button,\n  ButtonToolbar,\n  DropdownButton,\n  Dropdown,\n  ButtonGroup\n} from 'react-bootstrap'\nimport PropTypes from 'prop-types'\n\nexport default class Buttons extends Component {\n  static propTypes = {\n    fast: PropTypes.func.isRequired,\n    slow: PropTypes.func.isRequired,\n    playButton: PropTypes.func.isRequired,\n    pauseButton: PropTypes.func.isRequired,\n    clear: PropTypes.func.isRequired,\n    seed: PropTypes.func.isRequired,\n    gridSize: PropTypes.func.isRequired\n  }\n  handleSelect = (e) => {\n    this.props.gridSize(e)\n  }\n\n  render() {\n    return (\n      <div className=\"center buttons\">\n        <ButtonToolbar>\n          <ButtonGroup bsSize=\"xsmall\">\n            <Button onClick={this.props.playButton}>Play</Button>\n            <Button onClick={this.props.pauseButton}>Pause</Button>\n          </ButtonGroup>\n          <ButtonGroup bsSize=\"xsmall\">\n            <Button onClick={this.props.fast}>Fast</Button>\n            <Button onClick={this.props.slow}>Slow</Button>\n          </ButtonGroup>\n          <ButtonGroup bsSize=\"xsmall\">\n            <Button onClick={this.props.clear}>Clear</Button>\n            <Button onClick={this.props.seed}>Sow it</Button>\n          </ButtonGroup>\n          <DropdownButton\n            bsSize=\"xsmall\"\n            title=\"Grid Size\"\n            id=\"size-menu\"\n            onSelect={this.handleSelect}\n          >\n            {/* eventKey=\"1\" doesnt work */}\n            <Dropdown.Item eventKey={1}>20 X 10</Dropdown.Item>\n            <Dropdown.Item eventKey={2}>50 X 30</Dropdown.Item>\n            <Dropdown.Item eventKey={3}>70 X 50</Dropdown.Item>\n          </DropdownButton>\n        </ButtonToolbar>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport 'react-bootstrap'\nimport Grid from './Grid'\nimport Buttons from './Buttons'\n\nconst arrayClone = arr => JSON.parse(JSON.stringify(arr))\n\n\nexport default class Main extends Component {\n  constructor() {\n    super()\n    this.speed = 200\n    this.rows = 20\n    this.cols = 50\n\n    this.state = {\n      generation: 0,\n      gridFull: Array(this.rows)\n        .fill()\n        .map(() => Array(this.cols).fill(false))\n    }\n  }\n  componentDidMount() {\n    console.log(process.env.PUBLIC_URL)\n    this.seed()\n    this.playButton()\n  }\n  //   choose the box and change it boolean and css's color\n  selectBox = (row, col) => {\n    const gridFull = arrayClone(this.state.gridFull)\n    gridFull[row][col] = !gridFull[row][col]\n    this.setState({ gridFull })\n  }\n\n  // load the page and randomly sow the seeds\n\n  // **********************************************************\n  fast = () => {\n    this.speed = 100\n    this.playButton()\n  }\n  slow = () => {\n    this.speed = 1000\n    this.playButton()\n  }\n  playButton = () => {\n    clearInterval(this.intervalID)\n    this.intervalID = setInterval(this.play, this.speed)\n  }\n  pauseButton = () => {\n    clearInterval(this.intervalID)\n  }\n  clear = () => {\n    clearInterval(this.intervalID)\n    const gridFull = Array(this.rows)\n      .fill()\n      .map(() => Array(this.cols).fill(false))\n    this.setState({ generation: 0, gridFull })\n  }\n  seed = () => {\n    this.clear()\n    const gridFull = arrayClone(this.state.gridFull)\n    let i\n    let j\n    for (i = 0; i < this.rows; i += 1) {\n      for (j = 0; j < this.cols; j += 1) {\n        if (Math.floor(Math.random() * 4) === 1) {\n          gridFull[i][j] = true\n        }\n      }\n    }\n    this.setState({ gridFull })\n  }\n  // **********************************************************\n  gridSize = (size) => {\n    switch (size) {\n      case 1:\n        this.cols = 20\n        this.rows = 10\n        break\n      case 2:\n        this.cols = 50\n        this.rows = 30\n        break\n      default:\n        this.cols = 70\n        this.rows = 50\n    }\n    this.clear()\n  };\n  play = () => {\n    const g = this.state.gridFull\n    const g2 = arrayClone(this.state.gridFull)\n    let i\n    let j\n    // game of life's logic\n    // 1  2  3\n    // 4  *  6\n    // 7  8  9\n    for (i = 0; i < this.rows; i += 1) {\n      for (j = 0; j < this.cols; j += 1) {\n        let count = 0\n        // logic sequence: 2, 1, 3\n        if (i > 0) if (g[i - 1][j]) count += 1\n        if (i > 0 && j > 0) if (g[i - 1][j - 1]) count += 1\n        if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count += 1\n        // logic sequence: 4, 6\n        if (j < this.cols - 1) if (g[i][j + 1]) count += 1\n        if (j > 0) if (g[i][j - 1]) count += 1\n        // logic sequence: 8, 7, 9\n        if (i < this.rows - 1) if (g[i + 1][j]) count += 1\n        if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count += 1\n        if (i < this.rows - 1 && j < this.cols - 1) if (g[i + 1][j + 1]) count += 1\n        //   change g2\n        if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false\n        // we dont take the condition that count === 2 to our judgement,\n        // cause that result in infinite changing and no stable pattern.\n        if (!g[i][j] && count === 3) g2[i][j] = true\n      }\n    }\n    this.setState({\n      gridFull: g2,\n      generation: this.state.generation + 1\n    })\n  }\n\n\n  render() {\n    return (\n      <div id=\"App\">\n        <div>\n          <div id=\"title\">Game of Life </div>\n          <div id=\"generations\">Generations: {this.state.generation}</div>\n        </div>\n        {/* this is a file not a react-bootstrap's component */}\n        <Buttons\n          playButton={this.playButton}\n          pauseButton={this.pauseButton}\n          slow={this.slow}\n          fast={this.fast}\n          clear={this.clear}\n          seed={this.seed}\n          gridSize={this.gridSize}\n        />\n        <table>\n          <Grid\n            gridFull={this.state.gridFull}\n            cols={this.cols}\n            rows={this.rows}\n            selectBox={this.selectBox}\n          />\n        </table>\n      </div>\n    )\n  }\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport Main from './Main'\nimport './index.css'\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <Main />\n    </Router>\n    , document.getElementById('root'))\n"],"sourceRoot":""}